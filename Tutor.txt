git commit -m "FirstCommit"  - коммит
git branch - просмотр всех веток в локальном репозитории
git checkout -b nameBranch - создание новой ветки
git checkout nameBranch - для перехода в ветку 
git branch -d nameBranch - для удаления ветки, но нужно сначала перйти в другую ветку
git clone https://github.com/name.git - клонирование существуеющего проекта с удаленного репозитория

git pull - забрать изменения с сервера
git commit - подготовка изменений для сервера
git push - отправить подготовленные изменения на сервер

Порядок действий для клонирования GitHub-репозитория с использованием GitFlow и вложенных папок в ветку feature.
1. Создаем репозиторий GitHub (указываем создать Readme)
2. Клонируем папку (копируем ссылку из githib на репозиторий)
3. создаем Master ветку
4. нажимаем gitFlow (оставляем все по умолчанию). Визуально в разделе веток ничего не меняется. 
5. нажимаем gitFlow и создаем новую ветку develop.
6. push -->в окне выбираем галочку -выделить все--> отправить. На удаленном репозитории появятся ветки.
7. переключаемся на master и создаем новую папку с новым файлом.
8. выбираем на панели Терминал и окне выбираем $ git checkout -b feature/Task1, вводим пароль и имя если требуется. В sorceTree в разделе ветки появится ветка feature c вложенной папкой и произойдет переключение на нее.
9. push --> в окне выбираем галочку -выделить все--> отправить. На удаленном репозитории появятся новые ветки.
9. создаем новую папку (только латинскими буквами) и вложенный файл (Task1/First Task.txt).
10. делаем коммит.
11. push --> в окне выбираем галочку -выделить все--> отправить. На удаленном репозитории появятся новые файлы.
12. создаем новый файл (только латинскими буквами) в этой же папке(Task1/File for second commit.txt). Не забываем перед коммитом нажимать "индексировать" нужный файл.
13. Переходим на develop --> нажимем один раз на Task1 -->в контекстном меню выбираем "слить в текущую ветку "develop". Не забываем ставить галочку "создать новый коммит".
14. Переходим на master --> нажимаем один раз на develop -->в контекстном меню выбираем "слить в текущую ветку "master". Не забываем ставить галочку "создать новый коммит".

1 занятие:
Git - назначение, git-flow
значимые и ссылочные типы, место хранения в памяти. (Value Types and Reference Types)
2. занятие
практическое использование Git, основные команды и выполнение заданий из книги.
HW: 45p 54-58p. Создать в feature отдельную папку под названием Dreyer и в ней создать solution с консольным проектом. (не сделано)
и три первых урока по ITVDN (+)
3.	Boxing and Unboxing
https://itvdn.com/ru/blog/article/boxing-unboxing
HW подобрать маленькие задания для первых 6 уроков(+)

Tools->Option ->Keybord:
Project.NewFolder Alt+C ->создание папки в Solution Explorer
Project.AddClass Shift+Alt+C -> создание класса
HW Добавить и пройти все выполненные уроки в GIT в solution.
уроки 4-6.
4. Методы, все типы по видам сигнатур. 
HW все уроки Starter до конца.




